{
  "{\"sourceRoot\":\"/Users/trungthanh/Desktop/Project/API_CD/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/trungthanh/Desktop/Project/API_CD\",\"filename\":\"/Users/trungthanh/Desktop/Project/API_CD/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/trungthanh/Desktop/Project/API_CD\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/trungthanh/Desktop/Project/API_CD/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/trungthanh/Desktop/Project/API_CD",
      "filename": "/Users/trungthanh/Desktop/Project/API_CD/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/trungthanh/Desktop/Project/API_CD",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/trungthanh/Desktop/Project/API_CD/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/trungthanh/Desktop/Project/API_CD/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/trungthanh/Desktop/Project/API_CD/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _expressPackage = require(\"express\");\n\nvar _bodyParserPackage = require(\"body-parser\");\n\nvar _sqlPackage = require(\"mssql\"); //Initilize app with express web framework  \n\n\nvar app = _expressPackage(); //To parse result in json format  \n\n\napp.use(_bodyParserPackage.json()); // Connection string parameters.\n\napp.use(function (req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Methods\", \"GET,HEAD,OPTIONS,POST,PUT\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, contentType,Content-Type, Accept, Authorization\");\n  next();\n}); //Lets set up our local server now.  \n\nvar server = app.listen(process.env.PORT || 3001, function () {\n  var port = server.address().port;\n  console.log(\"App now running on port\", port);\n}); //Set up your sql connection string, i am using here my own, you have to replace it with your own.  \n\nvar dbConfig = {\n  user: 'imw',\n  password: 'abcd1234@@huyfan91',\n  server: '27.79.1.50',\n  database: 'imw_QuanLyDaoTaoTinChi'\n}; //Function to connect to database and execute query  \n\nvar QueryToExecuteInDatabase = function QueryToExecuteInDatabase(response, strQuery) {\n  //close sql connection before creating an connection otherwise you will get an error if connection already exists.  \n  _sqlPackage.close(); //Now connect your sql connection  \n\n\n  _sqlPackage.connect(dbConfig, function (error) {\n    if (error) {\n      console.log(\"Error while connecting to database :- \" + error);\n      response.send(error);\n    } else {\n      //let's create a request for sql object  \n      var request = new _sqlPackage.Request(); //Query to run in our database  \n\n      request.query(strQuery, function (error, responseResult) {\n        if (error) {\n          console.log(\"Error while connecting to database:- \" + error);\n          response.send(error);\n        } else {\n          response.send(responseResult);\n        }\n      });\n    }\n  });\n}; //GET API  \n\n\napp.get(\"/admin\", function (_req, _res) {\n  var Sqlquery = \"select * from Admin\";\n  QueryToExecuteInDatabase(_res, Sqlquery);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIl9leHByZXNzUGFja2FnZSIsInJlcXVpcmUiLCJfYm9keVBhcnNlclBhY2thZ2UiLCJfc3FsUGFja2FnZSIsImFwcCIsInVzZSIsImpzb24iLCJyZXEiLCJyZXMiLCJuZXh0IiwiaGVhZGVyIiwic2VydmVyIiwibGlzdGVuIiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJwb3J0IiwiYWRkcmVzcyIsImNvbnNvbGUiLCJsb2ciLCJkYkNvbmZpZyIsInVzZXIiLCJwYXNzd29yZCIsImRhdGFiYXNlIiwiUXVlcnlUb0V4ZWN1dGVJbkRhdGFiYXNlIiwicmVzcG9uc2UiLCJzdHJRdWVyeSIsImNsb3NlIiwiY29ubmVjdCIsImVycm9yIiwic2VuZCIsInJlcXVlc3QiLCJSZXF1ZXN0IiwicXVlcnkiLCJyZXNwb25zZVJlc3VsdCIsImdldCIsIl9yZXEiLCJfcmVzIiwiU3FscXVlcnkiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsZUFBZSxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUEvQjs7QUFDQSxJQUFNQyxrQkFBa0IsR0FBR0QsT0FBTyxDQUFDLGFBQUQsQ0FBbEM7O0FBQ0EsSUFBTUUsV0FBVyxHQUFHRixPQUFPLENBQUMsT0FBRCxDQUEzQixDLENBQ0E7OztBQUNBLElBQU1HLEdBQUcsR0FBR0osZUFBZSxFQUEzQixDLENBQ0E7OztBQUNBSSxHQUFHLENBQUNDLEdBQUosQ0FBUUgsa0JBQWtCLENBQUNJLElBQW5CLEVBQVIsRSxDQUNBOztBQUdBRixHQUFHLENBQUNDLEdBQUosQ0FBUSxVQUFVRSxHQUFWLEVBQWVDLEdBQWYsRUFBb0JDLElBQXBCLEVBQTBCO0FBQzlCRCxFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyw2QkFBWCxFQUEwQyxHQUExQztBQUNBRixFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyw4QkFBWCxFQUEyQywyQkFBM0M7QUFDQUYsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVcsOEJBQVgsRUFBMkMsMkVBQTNDO0FBQ0FELEVBQUFBLElBQUk7QUFDUCxDQUxELEUsQ0FPQTs7QUFDQSxJQUFNRSxNQUFNLEdBQUdQLEdBQUcsQ0FBQ1EsTUFBSixDQUFXQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUEvQixFQUFxQyxZQUFZO0FBQzVELE1BQU1DLElBQUksR0FBR0wsTUFBTSxDQUFDTSxPQUFQLEdBQWlCRCxJQUE5QjtBQUNBRSxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx5QkFBWixFQUF1Q0gsSUFBdkM7QUFDSCxDQUhjLENBQWYsQyxDQUtBOztBQUNBLElBQU1JLFFBQVEsR0FBRztBQUNiQyxFQUFBQSxJQUFJLEVBQUUsS0FETztBQUViQyxFQUFBQSxRQUFRLEVBQUUsb0JBRkc7QUFHYlgsRUFBQUEsTUFBTSxFQUFFLFlBSEs7QUFJYlksRUFBQUEsUUFBUSxFQUFFO0FBSkcsQ0FBakIsQyxDQU9BOztBQUNBLElBQU1DLHdCQUF3QixHQUFHLFNBQTNCQSx3QkFBMkIsQ0FBVUMsUUFBVixFQUFvQkMsUUFBcEIsRUFBOEI7QUFDM0Q7QUFDQXZCLEVBQUFBLFdBQVcsQ0FBQ3dCLEtBQVosR0FGMkQsQ0FHM0Q7OztBQUNBeEIsRUFBQUEsV0FBVyxDQUFDeUIsT0FBWixDQUFvQlIsUUFBcEIsRUFBOEIsVUFBVVMsS0FBVixFQUFpQjtBQUMzQyxRQUFJQSxLQUFKLEVBQVc7QUFDUFgsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMkNBQTJDVSxLQUF2RDtBQUNBSixNQUFBQSxRQUFRLENBQUNLLElBQVQsQ0FBY0QsS0FBZDtBQUNILEtBSEQsTUFJSztBQUNEO0FBQ0EsVUFBTUUsT0FBTyxHQUFHLElBQUk1QixXQUFXLENBQUM2QixPQUFoQixFQUFoQixDQUZDLENBR0Q7O0FBQ0FELE1BQUFBLE9BQU8sQ0FBQ0UsS0FBUixDQUFjUCxRQUFkLEVBQXdCLFVBQVVHLEtBQVYsRUFBaUJLLGNBQWpCLEVBQWlDO0FBQ3JELFlBQUlMLEtBQUosRUFBVztBQUNQWCxVQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwwQ0FBMENVLEtBQXREO0FBQ0FKLFVBQUFBLFFBQVEsQ0FBQ0ssSUFBVCxDQUFjRCxLQUFkO0FBQ0gsU0FIRCxNQUlLO0FBQ0RKLFVBQUFBLFFBQVEsQ0FBQ0ssSUFBVCxDQUFjSSxjQUFkO0FBQ0g7QUFDSixPQVJEO0FBU0g7QUFDSixHQW5CRDtBQW9CRixDQXhCRixDLENBMEJBOzs7QUFDQTlCLEdBQUcsQ0FBQytCLEdBQUosQ0FBUSxRQUFSLEVBQWtCLFVBQVNDLElBQVQsRUFBZUMsSUFBZixFQUFvQjtBQUNsQyxNQUFNQyxRQUFRLEdBQUcscUJBQWpCO0FBQ0FkLEVBQUFBLHdCQUF3QixDQUFDYSxJQUFELEVBQU9DLFFBQVAsQ0FBeEI7QUFDSCxDQUhEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy90cnVuZ3RoYW5oL0Rlc2t0b3AvUHJvamVjdC9BUElfQ0QvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgX2V4cHJlc3NQYWNrYWdlID0gcmVxdWlyZShcImV4cHJlc3NcIik7ICBcbmNvbnN0IF9ib2R5UGFyc2VyUGFja2FnZSA9IHJlcXVpcmUoXCJib2R5LXBhcnNlclwiKTsgIFxuY29uc3QgX3NxbFBhY2thZ2UgPSByZXF1aXJlKFwibXNzcWxcIik7ICBcbi8vSW5pdGlsaXplIGFwcCB3aXRoIGV4cHJlc3Mgd2ViIGZyYW1ld29yayAgXG5jb25zdCBhcHAgPSBfZXhwcmVzc1BhY2thZ2UoKTsgIFxuLy9UbyBwYXJzZSByZXN1bHQgaW4ganNvbiBmb3JtYXQgIFxuYXBwLnVzZShfYm9keVBhcnNlclBhY2thZ2UuanNvbigpKTsgIFxuLy8gQ29ubmVjdGlvbiBzdHJpbmcgcGFyYW1ldGVycy5cblxuXG5hcHAudXNlKGZ1bmN0aW9uIChyZXEsIHJlcywgbmV4dCkgeyAgXG4gICAgcmVzLmhlYWRlcihcIkFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpblwiLCBcIipcIik7ICBcbiAgICByZXMuaGVhZGVyKFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kc1wiLCBcIkdFVCxIRUFELE9QVElPTlMsUE9TVCxQVVRcIik7ICBcbiAgICByZXMuaGVhZGVyKFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVyc1wiLCBcIk9yaWdpbiwgWC1SZXF1ZXN0ZWQtV2l0aCwgY29udGVudFR5cGUsQ29udGVudC1UeXBlLCBBY2NlcHQsIEF1dGhvcml6YXRpb25cIik7ICBcbiAgICBuZXh0KCk7ICBcbn0pOyAgXG4gIFxuLy9MZXRzIHNldCB1cCBvdXIgbG9jYWwgc2VydmVyIG5vdy4gIFxuY29uc3Qgc2VydmVyID0gYXBwLmxpc3Rlbihwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDEsIGZ1bmN0aW9uICgpIHsgIFxuICAgIGNvbnN0IHBvcnQgPSBzZXJ2ZXIuYWRkcmVzcygpLnBvcnQ7ICBcbiAgICBjb25zb2xlLmxvZyhcIkFwcCBub3cgcnVubmluZyBvbiBwb3J0XCIsIHBvcnQpOyAgXG59KTsgIFxuICBcbi8vU2V0IHVwIHlvdXIgc3FsIGNvbm5lY3Rpb24gc3RyaW5nLCBpIGFtIHVzaW5nIGhlcmUgbXkgb3duLCB5b3UgaGF2ZSB0byByZXBsYWNlIGl0IHdpdGggeW91ciBvd24uICBcbmNvbnN0IGRiQ29uZmlnID0ge1xuICAgIHVzZXI6ICdpbXcnLFxuICAgIHBhc3N3b3JkOiAnYWJjZDEyMzRAQGh1eWZhbjkxJyxcbiAgICBzZXJ2ZXI6ICcyNy43OS4xLjUwJyxcbiAgICBkYXRhYmFzZTogJ2ltd19RdWFuTHlEYW9UYW9UaW5DaGknXG59XG4gIFxuLy9GdW5jdGlvbiB0byBjb25uZWN0IHRvIGRhdGFiYXNlIGFuZCBleGVjdXRlIHF1ZXJ5ICBcbmNvbnN0IFF1ZXJ5VG9FeGVjdXRlSW5EYXRhYmFzZSA9IGZ1bmN0aW9uIChyZXNwb25zZSwgc3RyUXVlcnkpIHsgIFxuICAgIC8vY2xvc2Ugc3FsIGNvbm5lY3Rpb24gYmVmb3JlIGNyZWF0aW5nIGFuIGNvbm5lY3Rpb24gb3RoZXJ3aXNlIHlvdSB3aWxsIGdldCBhbiBlcnJvciBpZiBjb25uZWN0aW9uIGFscmVhZHkgZXhpc3RzLiAgXG4gICAgX3NxbFBhY2thZ2UuY2xvc2UoKTsgIFxuICAgIC8vTm93IGNvbm5lY3QgeW91ciBzcWwgY29ubmVjdGlvbiAgXG4gICAgX3NxbFBhY2thZ2UuY29ubmVjdChkYkNvbmZpZywgZnVuY3Rpb24gKGVycm9yKSB7ICBcbiAgICAgICAgaWYgKGVycm9yKSB7ICBcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiRXJyb3Igd2hpbGUgY29ubmVjdGluZyB0byBkYXRhYmFzZSA6LSBcIiArIGVycm9yKTsgIFxuICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZChlcnJvcik7ICBcbiAgICAgICAgfSAgXG4gICAgICAgIGVsc2UgeyAgXG4gICAgICAgICAgICAvL2xldCdzIGNyZWF0ZSBhIHJlcXVlc3QgZm9yIHNxbCBvYmplY3QgIFxuICAgICAgICAgICAgY29uc3QgcmVxdWVzdCA9IG5ldyBfc3FsUGFja2FnZS5SZXF1ZXN0KCk7ICBcbiAgICAgICAgICAgIC8vUXVlcnkgdG8gcnVuIGluIG91ciBkYXRhYmFzZSAgXG4gICAgICAgICAgICByZXF1ZXN0LnF1ZXJ5KHN0clF1ZXJ5LCBmdW5jdGlvbiAoZXJyb3IsIHJlc3BvbnNlUmVzdWx0KSB7ICBcbiAgICAgICAgICAgICAgICBpZiAoZXJyb3IpIHsgIFxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkVycm9yIHdoaWxlIGNvbm5lY3RpbmcgdG8gZGF0YWJhc2U6LSBcIiArIGVycm9yKTsgIFxuICAgICAgICAgICAgICAgICAgICByZXNwb25zZS5zZW5kKGVycm9yKTsgIFxuICAgICAgICAgICAgICAgIH0gIFxuICAgICAgICAgICAgICAgIGVsc2UgeyAgXG4gICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLnNlbmQocmVzcG9uc2VSZXN1bHQpOyAgXG4gICAgICAgICAgICAgICAgfSAgXG4gICAgICAgICAgICB9KTsgIFxuICAgICAgICB9ICBcbiAgICB9KTsgICAgICAgICAgICAgXG4gfSAgXG4gIFxuLy9HRVQgQVBJICBcbmFwcC5nZXQoXCIvYWRtaW5cIiwgZnVuY3Rpb24oX3JlcSAsX3Jlcyl7ICBcbiAgICBjb25zdCBTcWxxdWVyeSA9IFwic2VsZWN0ICogZnJvbSBBZG1pblwiOyAgXG4gICAgUXVlcnlUb0V4ZWN1dGVJbkRhdGFiYXNlKF9yZXMsIFNxbHF1ZXJ5KTsgIFxufSk7ICBcblxuXG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "_expressPackage",
        "require",
        "_bodyParserPackage",
        "_sqlPackage",
        "app",
        "use",
        "json",
        "req",
        "res",
        "next",
        "header",
        "server",
        "listen",
        "process",
        "env",
        "PORT",
        "port",
        "address",
        "console",
        "log",
        "dbConfig",
        "user",
        "password",
        "database",
        "QueryToExecuteInDatabase",
        "response",
        "strQuery",
        "close",
        "connect",
        "error",
        "send",
        "request",
        "Request",
        "query",
        "responseResult",
        "get",
        "_req",
        "_res",
        "Sqlquery"
      ],
      "mappings": ";;AAAA,IAAMA,eAAe,GAAGC,OAAO,CAAC,SAAD,CAA/B;;AACA,IAAMC,kBAAkB,GAAGD,OAAO,CAAC,aAAD,CAAlC;;AACA,IAAME,WAAW,GAAGF,OAAO,CAAC,OAAD,CAA3B,C,CACA;;;AACA,IAAMG,GAAG,GAAGJ,eAAe,EAA3B,C,CACA;;;AACAI,GAAG,CAACC,GAAJ,CAAQH,kBAAkB,CAACI,IAAnB,EAAR,E,CACA;;AAGAF,GAAG,CAACC,GAAJ,CAAQ,UAAUE,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC9BD,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,2BAA3C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,2EAA3C;AACAD,EAAAA,IAAI;AACP,CALD,E,CAOA;;AACA,IAAME,MAAM,GAAGP,GAAG,CAACQ,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAA/B,EAAqC,YAAY;AAC5D,MAAMC,IAAI,GAAGL,MAAM,CAACM,OAAP,GAAiBD,IAA9B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCH,IAAvC;AACH,CAHc,CAAf,C,CAKA;;AACA,IAAMI,QAAQ,GAAG;AACbC,EAAAA,IAAI,EAAE,KADO;AAEbC,EAAAA,QAAQ,EAAE,oBAFG;AAGbX,EAAAA,MAAM,EAAE,YAHK;AAIbY,EAAAA,QAAQ,EAAE;AAJG,CAAjB,C,CAOA;;AACA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAUC,QAAV,EAAoBC,QAApB,EAA8B;AAC3D;AACAvB,EAAAA,WAAW,CAACwB,KAAZ,GAF2D,CAG3D;;;AACAxB,EAAAA,WAAW,CAACyB,OAAZ,CAAoBR,QAApB,EAA8B,UAAUS,KAAV,EAAiB;AAC3C,QAAIA,KAAJ,EAAW;AACPX,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAA2CU,KAAvD;AACAJ,MAAAA,QAAQ,CAACK,IAAT,CAAcD,KAAd;AACH,KAHD,MAIK;AACD;AACA,UAAME,OAAO,GAAG,IAAI5B,WAAW,CAAC6B,OAAhB,EAAhB,CAFC,CAGD;;AACAD,MAAAA,OAAO,CAACE,KAAR,CAAcP,QAAd,EAAwB,UAAUG,KAAV,EAAiBK,cAAjB,EAAiC;AACrD,YAAIL,KAAJ,EAAW;AACPX,UAAAA,OAAO,CAACC,GAAR,CAAY,0CAA0CU,KAAtD;AACAJ,UAAAA,QAAQ,CAACK,IAAT,CAAcD,KAAd;AACH,SAHD,MAIK;AACDJ,UAAAA,QAAQ,CAACK,IAAT,CAAcI,cAAd;AACH;AACJ,OARD;AASH;AACJ,GAnBD;AAoBF,CAxBF,C,CA0BA;;;AACA9B,GAAG,CAAC+B,GAAJ,CAAQ,QAAR,EAAkB,UAASC,IAAT,EAAeC,IAAf,EAAoB;AAClC,MAAMC,QAAQ,GAAG,qBAAjB;AACAd,EAAAA,wBAAwB,CAACa,IAAD,EAAOC,QAAP,CAAxB;AACH,CAHD",
      "sourceRoot": "/Users/trungthanh/Desktop/Project/API_CD/",
      "sourcesContent": [
        "const _expressPackage = require(\"express\");  \nconst _bodyParserPackage = require(\"body-parser\");  \nconst _sqlPackage = require(\"mssql\");  \n//Initilize app with express web framework  \nconst app = _expressPackage();  \n//To parse result in json format  \napp.use(_bodyParserPackage.json());  \n// Connection string parameters.\n\n\napp.use(function (req, res, next) {  \n    res.header(\"Access-Control-Allow-Origin\", \"*\");  \n    res.header(\"Access-Control-Allow-Methods\", \"GET,HEAD,OPTIONS,POST,PUT\");  \n    res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, contentType,Content-Type, Accept, Authorization\");  \n    next();  \n});  \n  \n//Lets set up our local server now.  \nconst server = app.listen(process.env.PORT || 3001, function () {  \n    const port = server.address().port;  \n    console.log(\"App now running on port\", port);  \n});  \n  \n//Set up your sql connection string, i am using here my own, you have to replace it with your own.  \nconst dbConfig = {\n    user: 'imw',\n    password: 'abcd1234@@huyfan91',\n    server: '27.79.1.50',\n    database: 'imw_QuanLyDaoTaoTinChi'\n}\n  \n//Function to connect to database and execute query  \nconst QueryToExecuteInDatabase = function (response, strQuery) {  \n    //close sql connection before creating an connection otherwise you will get an error if connection already exists.  \n    _sqlPackage.close();  \n    //Now connect your sql connection  \n    _sqlPackage.connect(dbConfig, function (error) {  \n        if (error) {  \n            console.log(\"Error while connecting to database :- \" + error);  \n            response.send(error);  \n        }  \n        else {  \n            //let's create a request for sql object  \n            const request = new _sqlPackage.Request();  \n            //Query to run in our database  \n            request.query(strQuery, function (error, responseResult) {  \n                if (error) {  \n                    console.log(\"Error while connecting to database:- \" + error);  \n                    response.send(error);  \n                }  \n                else {  \n                    response.send(responseResult);  \n                }  \n            });  \n        }  \n    });             \n }  \n  \n//GET API  \napp.get(\"/admin\", function(_req ,_res){  \n    const Sqlquery = \"select * from Admin\";  \n    QueryToExecuteInDatabase(_res, Sqlquery);  \n});  \n\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1596725208000
  }
}